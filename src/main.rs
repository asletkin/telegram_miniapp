use actix_files::Files;
use actix_web::{get, post, web, App, HttpResponse, HttpServer, Responder};
use dotenv::dotenv;

mod openai;
mod telegram {
    pub mod api;
}

mod routes {
    pub mod chat;
    pub mod media;
    pub mod voting;
    pub mod quiz;
    pub mod games;
}

mod state;


#[get("/")]
async fn index() -> impl Responder {
    HttpResponse::Ok().body("–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ")
}

#[post("/webhook")]
async fn telegram_webhook(body: web::Json<telegram::api::TelegramMessage>) -> HttpResponse {
    println!("‚û°Ô∏è –ü–æ–ª—É—á–µ–Ω webhook –æ—Ç Telegram");

    if let Some(msg) = &body.message {
        println!("üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —á–∞—Ç–∞ {}: {:?}", msg.chat.id, msg.text);

        if let Some(text) = &msg.text {
            if let Some(reply) = openai::ask_openai(text).await {
                println!("ü§ñ –û—Ç–≤–µ—Ç OpenAI: {}", reply);
                telegram::api::send_message(msg.chat.id, &reply).await;
            } else {
                println!("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç OpenAI");
            }
        }
    } else {
        println!("‚ö†Ô∏è –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ webhook");
    }

    HttpResponse::Ok().finish()
}

#[actix_web::main]
async fn main() -> std::io::Result<()> {
    dotenv().ok();
    env_logger::init();

    println!("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://0.0.0.0:3000");

    HttpServer::new(|| {
        App::new()
            .service(index)
            .service(telegram_webhook)
            .service(Files::new("/app", "./static/app").index_file("index.html"))
            .service(Files::new("/uploads", "./static/uploads").show_files_listing()) // ‚¨ÖÔ∏è –¥–æ–±–∞–≤–ª–µ–Ω–æ
            .service(routes::chat::chat_handler)
            .service(routes::media::upload)
            .service(routes::voting::list_images)
            .service(routes::voting::vote_image)
            .service(routes::quiz::get_quiz)
            .service(routes::quiz::submit_quiz)
            .service(routes::games::guess_number)
    })
    .bind(("0.0.0.0", 3000))?
    .run()
    .await
}


